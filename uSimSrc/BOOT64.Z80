	TITLE	"uSIM ROM BOOTSTRAP FOR 60K CP/M -- Z80 VERSION"; BOOT.Z80 - uSim ROM BOOTSTRAP FOR 60K CP/M; Copyright (C) 2000  Tsurishaddai Williamson, tsuri@earthlink.net;; This program is free software; you can redistribute it and/or; modify it under the terms of the GNU General Public License; as published by the Free Software Foundation; either version 2; of the License, or (at your option) any later version.;; This program is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the; GNU General Public License for more details.;; You should have received a copy of the GNU General Public License; along with this program; if not, write to the Free Software; Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.; NOTE: This must assemble to the same object as BOOT64.ASM.	.Z80	.SOURCE	"SYSTEM.EQU"; 63.5K CP/M LOCATIONSMEMSIZ	EQU	64			; MEMORY SIZE, KILOBYTESCPMVER	EQU	22			; CP/M VERSIONCCP	EQU	3200H+(MEMSIZ-20)*1024	; CCP BASE ADDRESSBDOS	EQU	CCP+0800H		; BDOS BASE ADDRESSBIOS	EQU	CCP+1600H		; BIOS BASE ADDRESSDATA	EQU	BIOS+(2300H-1F80H)	; BIOS UNINITIALIZED DATA ADDRESSREBOOT	EQU	0000H			; "JP REBOOT" TO REBOOTIOBYTE	EQU	0003H			; ADDRESS OF I/O BYTE VARIABLEUSRDSK	EQU	0004H			; ADDRESS OF USER NUMBER / CURRENT VARIABLESYSTEM	EQU	0005H			; "CALL SYSTEM" FOR SYSTEM CALLUSRFCB	EQU	005CH			; ADDRESS OF DEFAULT FILE CONTROL BLOCKUSRBUF	EQU	0080H			; ADDRESS OF DEFAULT I/O BUFFERUSRTPA	EQU	0100H			; ADDRESS OF TRANSIANT PROGRAM AREA	ORG	0000H	; PREPARE THE STACK POINTER (INVALID UNTIL RAM MAPPED IN)	LD	SP,0	; COPY 64K ROM TO 64K RAM	LD	HL, (MINROM SHL 8) OR (MINRAM)NXTBNK:	LD	A,H	OUT	(BANK2),A	LD	A,L	OUT	(BANK3),A	LD	BC,BNKSIZ * 2	LD	DE,BNKSIZ * 3NXTBYT:	LD	A,(BC)	LD	(DE),A	INC	BC	INC	DE	LD	A,D	OR	E	JP	NZ,NXTBYT	INC	H	INC	L	LD	A,H	CP	MINROM + 4	JP	NZ,NXTBNK	; MAP IN 64K RAM	LD	A,MINRAM + 0	OUT	(BANK0),A	LD	A,MINRAM + 1	OUT	(BANK1),A	LD	A,MINRAM + 2	OUT	(BANK2),A	LD	A,MINRAM + 3	OUT	(BANK3),A	; CONTINUE WITH BOOTSTRAP	JP	BOOT; THE FOLLOWING WILL BE OVERLAYED BY THE DISK BOOT	ORG	USRBUF	HALT; BOOT FROM DISK OR FROM ROM	ORG	USRTPABOOT:	; MOUNT DISK A:	LD	A,0	LD	BC,RAMDSK	CALL	DSKMNT	JP	NZ,ERROR		; READ TRACK 0, SECTOR 1 INTO USRBUF	LD	BC,0000H	CALL	SETTRK	LD	BC,0001H	CALL	SETSEC	LD	BC,USRBUF	CALL	SETDMA	CALL	RDSEC	LD	BC,NODSK	JP	NZ,ERROR	; EXAMINE THE FIRST INSTRUCTION IN USRBUF	LD	A,(USRBUF)	LD	HL,0000H; POINT TO "LXI SP"	CP	(HL)	JP	Z,GODSK		; BOOT FROM DISK IF "LXI SP"	JP	GOROM		; BOOT FROM ROM IF NOT "LXI SP"RAMDSK:	DB	'RAMDISK',0NODSK:	DB	'?DISK',10,13,0; MOUNT A DISK; IN: A = DISK NUMBER; IN: BC = ADDRESS OF DISK FILE NAME; OUT: NZ IF ERRORDSKMNT:	OUT	(DSKNUM),A	; SET DISK NUMBER	IN	A,(DSKCTL)	AND	DSKCLS		; DO NOTHING IF ALREADY MOUNTED	RET	Z	CALL	SETDMA		; SET DISK FILE NAME	LD	A,DSKOPN	OUT	(DSKCTL),A	; MOUNT THE DISK	IN	A,(DSKCTL)	AND	DSKERR		; RETURN NZ IF ERROR	RET; DROP INTO THE MONITOR IF THERE WAS AN ERRORERROR:	CALL	PUTS	LD	A,SYSMON	OUT	(SYSFLG),A	JP	BOOT		; TRY AGAIN TO BOOT; BOOT FROM DISKGODSK:	LD	BC,DSKMSG	CALL	PUTS	JP	USRBUF		; RUN DISK BOOTSTRAPDSKMSG:	DB	'[DISK BOOT]',10,13,0; BOOT FROM ROMGOROM:	LD	BC,ROMMSG	CALL	PUTS	JP	BIOS		; RUN BIOS IN ROMROMMSG:	DB	'[ROM BOOT]',10,13,0; PRINT A STRING; IN: BC = ADDRESS OF ZERO-TERMINATED STRINGPUTS:	LD	A,DEVTTY	OUT	(DEVCTL),A	LD	A,(BC)	OR	A	RET	Z	INC	BC	OUT	(DEVDAT),A	JP	PUTS; BIOS SET DMA POINTER FUNCTIONSETDMA:	LD	A,B	OUT	(DMAHI),A	LD	A,C	OUT	(DMALO),A	RET; BIOS SET DISK TRACK FUNCTIONSETTRK:	LD	A,B	OUT	(TRKHI),A	LD	A,C	OUT	(TRKLO),A	RET; BIOS SET DISK SECTOR FUNCTIONSETSEC:	DEC	BC	LD	A,B	OUT	(SECHI),A	LD	A,C	OUT	(SECLO),A	RET; BIOS READ DISK SECTOR FUNCTIONRDSEC:	LD	A,DSKRD	OUT	(DSKCTL),A	IN	A,(DSKCTL)	AND	DSKERR	LD	A,1	RET	NZ	XOR	A	RET; THE FOLLOWING WILL BE OVERLAYED BY THE ROM BIOS	ORG	BIOS	LD	BC,NOSYS	JP	ERRORNOSYS:	DB	'?SYSTEM',10,13,0	END